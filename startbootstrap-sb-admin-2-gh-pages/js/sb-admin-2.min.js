/*!
 * Start Bootstrap - SB Admin 2 v4.1.3 (https://startbootstrap.com/theme/sb-admin-2)
 * Copyright 2013-2021 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */


function CriarCampos() {
  window.location.href = "CriarCampo.html";
}

function Campos() {
  window.location.href = "Campos.html";
}

function CriarProfissional() {
  window.location.href = "CriarProfissional.html";
}

function RegistarProfissional(event) {
  event.preventDefault();
  const inputNome = document.querySelector("#input-Nome");
  const inputs = document.querySelectorAll('.inputsPro');
  let data = {};
  if (inputNome.value == null || inputNome.value == "") {
    alert('Por favor insira o seu nome.');
  } else {
    data[inputNome.name] = inputNome.value;
    for (const element of inputs) {
      if (element.value == null || element.value == "") {
        alert('Preencha');
        break;
      }
      data[element.name] = element.value;
    }
    console.log(data)
    SaveDataToLocalStorageProfissionais(data);
    window.location.href = "Profissionais.html";
  }

}

function SaveDataToLocalStorageProfissionais(data) {
  let a = [];
  a = JSON.parse(localStorage.getItem("Profissionais")) || [];
  console.log(a)
  a.push(data);
  localStorage.setItem("Profissionais", JSON.stringify(a));
}
/*
function CriarTabelaPros() {
  let data = JSON.parse(localStorage.getItem("Profissionais"))
  console.log(data)
  let tableData = data.map(user => (
    `
  <tr>
  <td><a href="ConsulatarProfissionais.html">${user.Nome}</a></td>
  <td>${user.Contacto}</td>
  <td>${user.Email}</td>
  <td>${user.Naturalidade}</td>
  </tr>
  `
  )).join('');
  let tbody = document.querySelector('#TabelaPros');
  tbody.innerHTML = tableData;
}*/



!function (l) { "use strict"; l("#sidebarToggle, #sidebarToggleTop").on("click", function (e) { l("body").toggleClass("sidebar-toggled"), l(".sidebar").toggleClass("toggled"), l(".sidebar").hasClass("toggled") && l(".sidebar .collapse").collapse("hide") }), l(window).resize(function () { l(window).width() < 768 && l(".sidebar .collapse").collapse("hide"), l(window).width() < 480 && !l(".sidebar").hasClass("toggled") && (l("body").addClass("sidebar-toggled"), l(".sidebar").addClass("toggled"), l(".sidebar .collapse").collapse("hide")) }), l("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel", function (e) { var o; 768 < l(window).width() && (o = (o = e.originalEvent).wheelDelta || -o.detail, this.scrollTop += 30 * (o < 0 ? 1 : -1), e.preventDefault()) }), l(document).on("scroll", function () { 100 < l(this).scrollTop() ? l(".scroll-to-top").fadeIn() : l(".scroll-to-top").fadeOut() }), l(document).on("click", "a.scroll-to-top", function (e) { var o = l(this); l("html, body").stop().animate({ scrollTop: l(o.attr("href")).offset().top }, 1e3, "easeInOutExpo"), e.preventDefault() }) }(jQuery);





function previewImagem(event) {
  const label = document.getElementById("labelImagem");
  const input = event.target;
  const quadrado = document.getElementById("quadrado-inserir-imagem");;
  const imagem = input.files[0];
  const reader = new FileReader();
  reader.readAsDataURL(imagem);
  reader.onload = function () {
    quadrado.style.backgroundImage = `url(${reader.result})`;
    quadrado.style.backgroundSize = 'cover';
    quadrado.style.backgroundPosition = 'center';
    quadrado.style.backgroundRepeat = 'no-repeat';
    label.textContent = "";
  };
}

function previewImagem2(event) {
  const label = document.getElementById("labelImagem");
  const input = event.target;
  const quadrado = document.getElementById("quadrado-inserir-imagem_Pro");;
  const imagem = input.files[0];
  const reader = new FileReader();
  reader.readAsDataURL(imagem);
  reader.onload = function () {
    quadrado.style.backgroundImage = `url(${reader.result})`;
    quadrado.style.backgroundSize = 'cover';
    quadrado.style.backgroundPosition = 'center';
    quadrado.style.backgroundRepeat = 'no-repeat';
    label.textContent = "";
  };
}

const app = new Vue({
  el: '#app',
  data: {
    items: []
  },
  mounted() {
    const data = localStorage.getItem('Profissionais');
    if (data) {
      const parsedData = JSON.parse(data);
      this.items = parsedData;
    }
  }
});

